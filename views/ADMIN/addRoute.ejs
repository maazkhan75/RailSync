<!DOCTYPE html>

<!-- the below line will apply bootstrap dark mode to even calender -->
<!-- <html lang="en" data-bs-theme="dark">    -->
<html lang="en">   

<%- include('./partials/head.ejs') %>

<body>
  <div id="content">
<%- include('./partials/header.ejs') %>
<%- include('./partials/sidebar.ejs') %>

<main id="main" class="main">

    <div class="pagetitle">
      <h1>Add Route</h1>
      <nav>
        <ol class="breadcrumb">
          <li class="breadcrumb-item"><a href="adminDash">Admin Dashboard</a></li>
          <li class="breadcrumb-item active">Add Route</li>
        </ol>
      </nav>
    </div><!-- End Page Title -->
    <section class="section">
      <div class="row">


        

          <div class="card">
            <div class="card-body">
              <h5 class="card-title" >Route Details :</h5>

              <!-- Multi Columns Form -->

              <form class="row g-3">

                <div class="col-md-6">
                    <label for="TrainId" class="form-label" style="color: #de6b00;">TrainID</label>
                    <select id="TrainId" class="form-select inputs selector" required>
                      <% Train.forEach((train) => { %>
                        <option value="<%= train.TrainId %>"><%= train.TrainId %></option>
                    <% }); %>
                    </select>
                </div>
                <div class="col-md-6">
                    <label for="TrackId" class="form-label" style="color: #de6b00;">Track</label>
                    <select id="TrackId" class="form-select inputs selector" required>
                        <% Track.forEach((track) => { %>
                            <option value="<%= track.TrackId %>"><%= track.Station1Id %> - <%= track.Station2Id %></option>
                        <% }); %>
                    </select>
                </div>

<!-- 
                <div class="col-md-6">
                  <label for="DepartureTime" class="form-label" style="color: #de6b00;">DepartureTime</label>
                  <input type="datetime-local" class="form-control inputs" id="DepartureTime">
                </div> -->
                

                <!--    if we want to do data-time picker with flatpickr js library             -->
                <div class="col-md-6">
                  <label for="DepartureTime" class="form-label">DepartureTime</label>
                  <input type="text" class="form-control inputs" id="DepartureTime" placeholder="Open Calendar" required>
                </div>
                
                <script>
                  flatpickr("#DepartureTime", {
                    enableTime: true,
                    dateFormat: "Y-m-d H:i",
                    theme: "dark"
                  });
                </script>
<!--                 
                  <div class="col-md-6">
                    <label for="ArrivalTime" class="form-label" style="color: #de6b00;">ArrivalTime</label>
                    <input type="datetime-local" class="form-control inputs" id="ArrivalTime">
                  </div> -->

                   <!--    if we want to do data-time picker with flatpickr js library             -->
                <div class="col-md-6">
                  <label for="ArrivalTime" class="form-label">ArrivalTime</label>
                  <input type="text" class="form-control inputs" id="ArrivalTime" placeholder="Open Calendar" required>
                </div>
                
                <script>
                  flatpickr("#ArrivalTime", {
                    enableTime: true,
                    dateFormat: "Y-m-d H:i",
                    theme: "dark"
                  });
                </script>

                  <div class="col-12 text-left">
                  <button type="submit" id="submitButton" class="btn custom-btn">Submit</button>
                  <button type="reset" class="btn custom-btn-secondary">Reset</button>
                  </div>

              </form><!-- End Multi Columns Form -->

            </div>
          </div>


        </div>

    </section>

  </main><!-- End #main -->

  <!-- Custom Alert Box Structure -->
<div id="alertModal" class="alert-modal">
  <div class="alert-content">
      <span class="alert-close" onclick="closeAlert()">&times;</span>
      <p id="alertMessage"></p>
      <button class="alert-btn" onclick="closeAlert()">OK</button>
  </div>
</div>


  <%- include('./partials/footer.ejs') %>
</div>

  <%- include('./partials/script.ejs') %>


<script>

    
        window.onload = function()
        {
        document.getElementById("content").style.opacity = '1'; // Fade in content
        };

    // Function to open the custom alert box
    function showAlert(message) {
        document.getElementById('alertMessage').innerText = message;
        document.getElementById('alertModal').style.display = 'flex';
    }

    // Function to close the custom alert box
    function closeAlert() {
        document.getElementById('alertModal').style.display = 'none';
    }

//******************************************


  document.getElementById('submitButton').addEventListener('click', function(event) {
      event.preventDefault();
      const TrainId = document.getElementById('TrainId').value;
      const TrackId = document.getElementById('TrackId').value;
      const DepartureTime = document.getElementById('DepartureTime').value;
      const ArrivalTime = document.getElementById('ArrivalTime').value;

      if (!TrainId || !TrackId || !DepartureTime || !ArrivalTime) {
        //alert('Please fill out all required fields.');
        showAlert('Please fill out all required fields.');
        return;
      }

        
      fetch('/TD/addRoute', {
      method: 'POST',
      body: JSON.stringify({ TrainId,TrackId,DepartureTime,ArrivalTime }),
        headers: {
            'Content-Type': 'application/json'
        }
    })
    .then(response => response.json())
    .then(data => {
      const result = data.Message;
       if(result[0].ResultMessage=='ROUTE ADDED SUCCESSFULLY')
          {window.location.href = '/routesData';}
        else
        {
          //console.log(result[0].ResultMessage);
          //alert(result[0].ResultMessage);
          showAlert(result[0].ResultMessage);
        }

    })
    .catch(error => {
       
      console.error('Error:', error);
    });
      // You can perform further actions here, such as sending the data to the server via fetch() or XMLHttpRequest
  });
</script>
</body>
</html>
<!DOCTYPE html>
<html lang="en">

<%- include('./partials/head.ejs') %>

<style>
    body {
        font-family: Comfortaa, sans-serif;
        margin: 0;
        padding: 0;
        background-color: #000000;
    }
    .container {
        max-width: 1200px;
        margin: 20px auto;
        padding: 20px;
        background-color: #000000;
        border-radius: 5px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    }
     table {
        width: 100%;
        border-collapse: collapse;
    }
    th, td {
        border: 2px solid rgb(66, 66, 66);
        padding: 10px;
        text-align: left;
    }
     th {
        background-color: #000000;
        font-weight: bold;
        font-family: ubuntu, sans-serif;
        color: rgb(255, 106, 0);
    }
    tr:hover {
        background-color: #1a1a1a;
    } 
    .edit-btn, .delete-btn {
        padding: 5px 10px;
        color: rgb(0, 0, 0);
        font-weight: bold;
        font-size: 0.9em;
        margin-right:5px;
        margin-top: 5px;
        margin-bottom: 5px;
        border: none;
        cursor: pointer;
        border-radius: 30px;
        transition: background-color 0.2s ease-in;
    }
    .delete-btn {
        background-color: #b40c00;
    }
    .edit-btn{
        background-color: #32c700;
    }
    .delete-btn:hover{
        background-color: #ec1000;
    }
    .edit-btn:hover{
        background-color: #40ff00;
    }

    .table-header {
        margin-bottom: 10px;
        display: flex;
        align-items: center;
    }

    .search-input {
        flex: 1;
        margin-right: 10px;
        padding: 5px;
        border-radius: 10px;
        outline: none;
        border: 2px solid #888888;
        color: #ffffff;
        background-color: #000;
    }

    .search-input:focus {
	border-color: #de6b00;
	-webkit-box-shadow: none;
	box-shadow: none;
    }

    .search-input:enabled{
	background-color: #000;
	color:white;
	font-weight: 600;
	letter-spacing: 1px;
	outline: none;
    }


    .search-btn {
        padding: 5px 10px;
        background-color: #7700ff;
        color: #000000;
        font-weight:bold;
        border: none;
        font-size: 0.9em;
        margin-left: 0.3em;
        transition: all 0.2s ease-in;
        cursor: pointer;
        border-radius: 30px;
    }

    .search-btn:hover {
        background-color: #9a42ff;
    }

    .table-responsive {
    overflow-x: auto;
    }

    @media screen and (max-width: 650px) {
    th, td {
        font-size: 0.8em;
    }
    .edit-btn, .delete-btn {
        font-size: 0.8em;
    }
    .search-btn{
        font-size: 0.8em;
    }
    input{
        font-size: 0.8em;
    }
}
    
</style>
<body>

<%- include('./partials/header.ejs') %>

<%- include('./partials/sidebar.ejs') %>

    <main id="main" class="main">

        <div class="pagetitle">
        <h1>Trains Data</h1>
        <nav>
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="adminDash">Admin Dashboard</a></li>
                <li class="breadcrumb-item active">Trains Data</li>
            </ol>
        </nav>
        </div><!-- End Page Title -->

        <section class="section">


                <div class="container">
                <h2>Train Data</h2>
                <div class="table-responsive">
                <table>
                    <thead>
                        <tr>
                            <th>TrainID</th>
                            <th>UpDownStatus</th>
                            <th>DeptStation</th>
                            <th>ArrivalStation</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        <% Trains.forEach((i)=>{ %>
                            <tr data-train-id="<%= i.TrainId %>">
                                <td><%= i.TrainId %></td>
                                <%if(i.UpDownStatus=='1'){ %>
                                <td>Up</td>
                                <% }else {%>
                                <td>Down</td>
                                <% }%>
                                <td><%= i.DeptStation %></td>
                                <td><%= i.ArrivalStation %></td>
                                <td>
                                    <button class="edit-btn" onclick="editTrain('<%= i.TrainId %>')">edit</button>
                                    <button class="delete-btn" onclick="confirmDeleteTrain('<%= i.TrainId %>')">delete</button>
                                </td>
                            </tr>
                            <% }); %>


                        <!-- More rows here -->
                    </tbody>
                </table>
                </div>
            </div>
   

            <div class="container">
                <h2>Carriage Data</h2>
                <div class="table-responsive">
                <div class="table-header">
                    <input type="text" id="searchCarriage" class="search-input" placeholder="Search By TrainID...">
                    <button id="searchCarriageButton" class="search-btn">Search</button>
                </div>
                <table id="seatTable">
                    <thead>
                        <tr>
                            <th>CarriageID</th>
                            <th>TrainID</th>
                            <th>Type</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr></tr>


                        <!-- More rows here -->
                    </tbody>
                </table>
                </div>
            </div>

            <div class="container">
                <h2>Seats</h2>
                <div class="table-responsive">
                <div class="table-header">
                    <input type="text" id="searchSeat" class="search-input" placeholder="Search By CarriageID...">
                    <button id="searchSeatButton" class="search-btn">Search</button>
                </div>
                <table id="Seats">
                    <thead>
                        <tr>
                            <th>CarriageID</th>
                            <th>TrainID</th>
                            <th>SeatNo</th>
                            <th>BookingStatus</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr></tr>


                        <!-- More rows here -->
                    </tbody>
                </table>
                </div>
            </div>

        </section>
    </main>


    <!-- Modal Structure -->
<div id="deleteModal" class="modal">
    <div class="modal-content">
        <!-- <span class="close" onclick="closeModal()">&times;</span> -->
        <p>Are you sure you want to delete?</p>
        <div class="modal-buttons">
            <button class="confirm-btn" id="confirmDelete">Yes</button>
            <button class="cancel-btn" onclick="closeModal()">No</button>
        </div>
    </div>
</div>


<!-- Custom Alert Box Structure -->
<div id="alertModal" class="alert-modal">
    <div class="alert-content">
        <span class="alert-close" onclick="closeAlert()">&times;</span>
        <p id="alertMessage"></p>
        <button class="alert-btn" onclick="closeAlert()">OK</button>
    </div>
</div>


    
  <%- include('./partials/footer.ejs') %>
  <%- include('./partials/script.ejs') %>

<script>

let deleteFunction;  // Function to call on confirmation

    function confirmDeleteTrain(TrainId) {
        deleteFunction = () => deleteTrain(TrainId);  //setting to appropriate delete func not calling here...
        openModal();
    }

    function confirmDeleteCarriage(CarriageId) {
        deleteFunction = () => deleteCarriage(CarriageId);  //setting to appropriate delete func not calling here...
        openModal();
    }

    function openModal() {
        document.getElementById('deleteModal').style.display = 'flex';
    }

    function closeModal() {
        document.getElementById('deleteModal').style.display = 'none';
    }

    document.getElementById('confirmDelete').addEventListener('click', function() {
        deleteFunction();
        closeModal();
    });


//******************************************

    // Function to open the custom alert box
    function showAlert(message) {
        document.getElementById('alertMessage').innerText = message;
        document.getElementById('alertModal').style.display = 'flex';
    }

    // Function to close the custom alert box
    function closeAlert() {
        document.getElementById('alertModal').style.display = 'none';
    }

//******************************************


function updateTable(data) {
    const table = document.getElementById('seatTable');
    table.innerHTML = `
        <tr>
            <th>CarriageID</th>
            <th>TrainID</th>
            <th>Type</th>
            <th>Actions</th>
        </tr>
    `;
    // Loop through the received data and append rows to the table
    if (Array.isArray(data.Carriage)) {
        data.Carriage.forEach(entry => {
            const row = document.createElement('tr');
            row.setAttribute('data-carriage-id', entry.CarriageId);
            row.innerHTML = `
                <td>${entry.CarriageId}</td>
                <td>${entry.TrainId}</td>
                <td>${entry.Type}</td>
                <td>
                <button class="edit-btn" onclick="editCarriage('${entry.CarriageId}','${entry.TrainId}')">edit</button>
                <button class="delete-btn" onclick="confirmDeleteCarriage('${entry.CarriageId}')">delete</button>
                </td>
            `;
            table.appendChild(row);
        });
    } else {
        console.error('Unexpected data format:', data);
    }
}


document.getElementById('searchCarriageButton').addEventListener('click', function() {
    // Retrieve the value entered in the search input field
    const searchTerm = document.getElementById('searchCarriage').value;
    if(searchTerm ==null)
        return;
    //console.log(searchTerm);
    // You can also send the search term to your server for further processing if needed
    fetch('/TD/searchCarriage', {
      method: 'POST',
      body: JSON.stringify({ searchTerm: searchTerm }),
        headers: {
            'Content-Type': 'application/json'
        }
    })
    .then(response => response.json())
    .then(data => {
       updateTable(data);

    })
    .catch(error => {
        //console.log('testing......');
      console.error('Error:', error);
    });
  });


  function updateSeatTable(data)
  {
    const table = document.getElementById('Seats');
    table.innerHTML = `
        <tr>
            <th>CarriageID</th>
            <th>TrainID</th>
            <th>SeatNo</th>
            <th>BookingStatus</th>
            <th>Actions</th>
        </tr>
    `;
    // Loop through the received data and append rows to the table
    if (Array.isArray(data.Seat)) {
        data.Seat.forEach(entry => {
            const row = document.createElement('tr');
            row.setAttribute('data-carriage-id', entry.CarriageID);
            row.setAttribute('data-train-id', entry.TrainID);
            row.setAttribute('data-seat-no', entry.SeatNo);
            row.innerHTML =` 
                <td>${entry.CarriageID}</td>
                <td>${entry.TrainID}</td>
                <td>${entry.SeatNo}</td>
                <td>${entry.BookingStatus}</td>
                <td>
                <button class="edit-btn" onclick="editSeat('${entry.CarriageID}', '${entry.TrainID}', '${entry.SeatNo}')">Book/Unbook</button>
                            
                </td>
                </td>
            `;
            table.appendChild(row);
        });
    } else {
        console.error('Unexpected data format:', data);
    }
  }

  document.getElementById('searchSeatButton').addEventListener('click', function() {
    // Retrieve the value entered in the search input field
    const searchTerm = document.getElementById('searchSeat').value;
    if(searchTerm ==null)
        return;
    //console.log(searchTerm);
    // You can also send the search term to your server for further processing if needed
    fetch('/TD/SearchSeat', {
      method: 'POST',
      body: JSON.stringify({ searchTerm: searchTerm }),
        headers: {
            'Content-Type': 'application/json'
        }
    })
    .then(response => response.json())
    .then(data => {
       updateSeatTable(data);

    })
    .catch(error => {
        
      console.error('Error:', error);
    });
  });


  function editSeat(CarriageID, TrainID, SeatNo) {
    fetch('/TD/editSeat', {
        method: 'POST',
        body: JSON.stringify({ CarriageID, TrainID, SeatNo }),
        headers: {
            'Content-Type': 'application/json'
        }
    })
    .then(response => response.json())
    .then(data => {
        const table = document.getElementById('Seats');
        const rows = table.querySelectorAll('tr');
        const result = data.Message[0];

        rows.forEach(row => {
        const seatNo = row.getAttribute('data-seat-no');

        if (result.ResultMessage !== 'SEAT DOES NOT EXIST') {
            if (seatNo === SeatNo) {
                if(result.BookingStatus ==null)
                    row.querySelector('td:nth-child(4)').textContent = 'null';
                else 
                    row.querySelector('td:nth-child(4)').textContent = result.BookingStatus;
            }
        }
        });
    })
    .catch(error => {
        console.error('Error:', error);
    });
}

function editTrain(TrainId) {
    
    window.location.href = `/editTrain?TrainID=${TrainId}`;
}

function deleteTrain(TrainId) {
        fetch(`/TD/deleteTrain?TrainId=${TrainId}`, {
            method: 'DELETE'
        })
        .then(response => {
            if (response.ok) {
                // Remove the corresponding row from the HTML table
                const rowToDelete = document.querySelector(`tr[data-train-id="${TrainId}"]`);
                if (rowToDelete) {
                    rowToDelete.remove();
                } else {
                    console.error('Failed to find the row to delete.');
                }
            } else {
                console.error('Failed to delete Train');
                //alert('Failed to delete train. Please try again later.');
                showAlert('Failed to delete train. Please try again later.');
            }
        })
        .catch(error => {
            console.error('Error:', error);
            //alert('An error occurred. Please try again later.');
            showAlert('An error occurred. Please try again later.');
        });
}


function editCarriage(CarriageId,TrainId) {
    
    window.location.href = `/editCarriage?CarriageId=${CarriageId}&TrainId=${TrainId}`;  //now goes to app.js then editCarriage.ejs then to TD/editCarriage then to sqlProcedures 
}

function deleteCarriage(CarriageId) {
        fetch(`/TD/deleteCarriage?CarriageId=${CarriageId}`, {
            method: 'DELETE'
        })
        .then(response => {
            if (response.ok) {
                // Remove the corresponding row from the HTML table
                const rowToDelete = document.querySelector(`tr[data-carriage-id="${CarriageId}"]`);
                if (rowToDelete) {
                    rowToDelete.remove();
                } else {
                    console.error('Failed to find the row to delete.');
                }
            } else {
                console.error('Failed to delete Train');
                //alert('Failed to delete train. Please try again later.');
                showAlert('Failed to delete train. Please try again later.');
            }
        })
        .catch(error => {
            console.error('Error:', error);
            //alert('An error occurred. Please try again later.');
            showAlert('An error occurred. Please try again later.');
        });
}


</script>
</body>
</html>